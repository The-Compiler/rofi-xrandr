internal=eDP-1
dp_prefix=DP

declare -A screens=(
    [hdmi]="HDMI-1"
    [dp1]="$dp_prefix-1"
    [dp2]="$dp_prefix-2"
    [dp3]="$dp_prefix-3"
    [dp4]="$dp_prefix-4"
    [dp-dock-1]="$dp_prefix-1-1"
    [dp-dock-2]="$dp_prefix-1-2"
    [dp-dock-3]="$dp_prefix-1-3"
)

declare -A configs=(
    [left]="--left-of "$internal" --auto"
    [above]="--above "$internal" --auto"
    [left fullhd]="--left-of "$internal" --mode 1920x1080"
    [right]="--right-of "$internal" --auto"
    [same]="--same-as "$internal" --auto"
)

init_xrandr=$(xrandr)
connected_screens=()
for name in "${!screens[@]}"; do
    if echo "$init_xrandr" | grep -q "^${screens[$name]} connected"; then
        connected_screens+=("$name")
    fi
done

output=
screen=$(printf '%s\n' "${connected_screens[@]}" "internal" "home" "present" | rofi -dmenu -p "screen" -m -5)
[[ $? != 0 ]] && exit 1

if [[ $screen == internal ]]; then
    # turn off everything, only laptop screen
    xrandr_args=()
    for name in "${!screens[@]}"; do
        if echo "$init_xrandr" | grep -q "^${screens[$name]}"; then
            xrandr_args+=(--output "${screens[$name]}" --off)
        fi
    done
    output+=$(xrandr "${xrandr_args[@]}" 2>&1)
elif [[ $screen == home ]]; then
    # [vertical DisplayPort] - [normal USB-C] - [laptop]
    output+=$(xrandr --output "${screens[dp2]}" --left-of "$internal" --auto 2>&1)
    output+=$(xrandr --output "${screens[dp-dock-2]}" --left-of "${screens[dp2]}"  --auto --rotate right 2>&1)
    output+=$(xrandr --output "$internal" --auto 2>&1)
elif [[ $screen == present ]]; then
    # [projector] == [external USB-C] - [laptop]
    config=$(printf '%s\n' "${!configs[@]}" | rofi -dmenu -p "config" -m -5)

    # projector can be connected via HDMI or via USB-C
    dp_output=$(echo "$init_xrandr" | grep -o "^$dp_prefix-[0-9] connected" | cut -d' ' -f1 2>&1)
    [[ $? != 0 ]] && exit 1
    if printf '%s\0' "${connected_screens[@]}" | grep -Fxqz -- "${screens[hdmi]}"; then
        proj_output="${screens[hdmi]}"
    else  # USB-C
        proj_output=$(echo "$init_xrandr" | grep -o "^$dp_prefix-[0-9]-[0-9] connected" | cut -d' ' -f1 2>&1)
    fi

    output+=$(xrandr --output "$dp_output" ${configs[$config]} 2>&1)
    output+=$(xrandr --output "$proj_output" --same-as "$dp_output" --auto 2>&1)
else
    # [single output] [laptop]
    config=$(printf '%s\n' "${!configs[@]}" | rofi -dmenu -p "config" -m -5)
    [[ $? != 0 ]] && exit 1
    output+=$(xrandr --output "${screens[$screen]}" ${configs[$config]} 2>&1)
fi

if [[ $output ]]; then
    notify-send -u critical "$output"
fi

herbstclient detect_monitors
herbstclient emit_hook quit_panel
for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
    barpyrus $monitor &
done
[[ -f ~/.fehbg ]] && ~/.fehbg &

# Pause notifications when presenting, unpause on other switch
if [[ $screen == present ]]; then
    dunstctl set-paused true
else
    dunstctl set-paused false
fi
