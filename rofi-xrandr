#!/bin/bash

declare -A screens=(
    [hdmi]="HDMI-A-0"
    [dp1]="DisplayPort-0"
    [dp2]="DisplayPort-1"
    [hdmi-dock]="DisplayPort-2"
    [dp-dock-1]="DisplayPort-3"
    [dp-dock-2]="DisplayPort-4"
    [dp-dock-3]="DisplayPort-5"
    [dp-dock-4]="DisplayPort-6"
)

declare -A configs=(
    [left]="--left-of eDP --auto"
    [above]="--above eDP --auto"
    [left fullhd]="--left-of eDP --mode 1920x1080"
    [right]="--right-of eDP --auto"
    [same]="--same-as eDP --auto"
)

connected_screens=()
for name in "${!screens[@]}"; do
    if xrandr | grep -q "^${screens[$name]} connected"; then
        connected_screens+=("$name")
    fi
done

output=
screen=$(printf '%s\n' "${connected_screens[@]}" "internal" "home" "present" | rofi -dmenu -p "screen" -m -5)
[[ $? != 0 ]] && exit 1
if [[ $screen == internal ]]; then
    xrandr_args=()
    for name in "${connected_screens[@]}"; do
        xrandr_args+=(--output "${screens[$name]}" --off)
    done
    output+=$(xrandr "${xrandr_args[@]}" 2>&1)
elif [[ $screen == home ]]; then
    dp_output=$(xrandr | grep -o 'DisplayPort-[0-9] connected' | cut -d' ' -f1 2>&1)
    output+=$(xrandr --output "$dp_output" --left-of "eDP" --auto 2>&1)
    output+=$(xrandr --output "${screens[hdmi]}" --left-of "$dp_output"  --auto --rotate right 2>&1)
    output+=$(xrandr --output eDP --auto 2>&1)
elif [[ $screen == present ]]; then
    config=$(printf '%s\n' "${!configs[@]}" | rofi -dmenu -p "config" -m -5)
    [[ $? != 0 ]] && exit 1
    output+=$(xrandr --output "${screens[dp1]}" ${configs[$config]} 2>&1)
    output+=$(xrandr --output "${screens[hdmi]}" --same-as "${screens[dp1]}" --auto 2>&1)
else
    config=$(printf '%s\n' "${!configs[@]}" | rofi -dmenu -p "config" -m -5)
    [[ $? != 0 ]] && exit 1
    output+=$(xrandr --output "${screens[$screen]}" ${configs[$config]} 2>&1)
fi

if [[ $output ]]; then
    notify-send -u critical "$output"
fi

herbstclient detect_monitors
herbstclient emit_hook quit_panel
for monitor in $(herbstclient list_monitors | cut -d: -f1) ; do
    barpyrus $monitor &
done
[[ -f ~/.fehbg ]] && ~/.fehbg &

if [[ $screen == present ]]; then
    notify-send "Turning off notifications"
    sleep 1
    dunstctl close
    dunstctl set-paused true
elif [[ $(dunstctl is-paused) == true ]]; then
    dunstctl set-paused false
    notify-send "Turned on notifications"
fi

